
[Compiler Errors]
1. Select all of the items which are output by the compiler if a syntax error occurs during the compilation process

	Object File(s)
	⭕️ Error Messages
	Executable Program
	Source File(s)

[Compiler Inputs]
2. What files are used when the compiler executes?

	⭕️ Source Files (like c/cpp files)
	⭕️ Header Files (like h/hpp files)
	Object File(s)
	Documentation File(s)
	Make File(s)

[Compiler/Linker]
3. The compiler and linker are seperate processes which execute independently of one another

	⭕️True
	False

[Compiler Outputs]
4. What are the 'things' which the compiler creates?

	Executable File(s)
	Source File(s)
	⭕️ Object File(s)
	Make File(s)

[Compiler Processes]
5. Select the things which a compiler does during the compile process

	Analyzes Logic
	⭕️Analyzes Syntax
	Spell Checks Variables
	⭕️Optimizes your Source Code
	⭕️Keyword Checking
	⭕️Generate debugging symbols (if requested)

[Linker Input]
6. The Linker takes the following inputs to complete its function..

	⭕️Object File(s)
	Source code File(s)
	⭕️Operating System Libraries/functions
	Documentation File(s)
	Make File(s)
	Operating system source file(s)

[Linker Output]
7. What are the outputs of the Linker?

	⭕️Executable Program
	Object File(s)
	Source File(s)

[Object Files1]
8. An Object file is created by the compiler and contains machine language instructions which are executable by the computer

	True
	⭕️False

[Object Files2]
9. An Object file is created by the compiler and contains machine language instructions which are not executable but are input files for the Linker

	⭕️True
	False

[Phases]
10. Match the phases which are taken to create an executable program with the steps in the order they are executed.  Step 1 is the first, Step 2 is the second, etc.

	Step 1 Create/Edit Source Code
	Step 2 PreProcessing
	Step 3 Compile
	Step 4 Linking
	Step 5 Program Execution

[Preprocessor Inputs]
11. What type of statements does the preprocessor of the C/C++ language process? 

	C/C++ language statements
	⭕️#include statements
	⭕️#ifdef statements
	⭕️Any statement that begins with #

[Interpreter]
12. What are the main difference(s) between a Compiler and an Interpreter?

	⭕️Compilers create executables, Interpreters compile each statement on the fly during run-time
	There are no difference between them
	Compilers compile each statement at run time, interpreters create executables
	⭕️Interpreters use a run-time program which must be installed where compilers create programs which are self-contained
	Interpreters create self contained programs where compilers require a run-time program
